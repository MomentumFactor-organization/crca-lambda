name: Deploy phylloprofileanalytics

on:
  push:
    branches:
      - develop
      - staging
      - production
    paths:
      - 'lambdas/phyllo-profile-analytics/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        default: ''
      aws_region:
        description: 'AWS Region for deployment'
        required: false
        default: 'us-west-1'

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ github.event.inputs.aws_region || 'us-west-1' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.5.0

      - name: Set up Python
        uses: actions/setup-python@v2.3.0
        with:
          python-version: '3.11'

      - name: Determine environment and region
        id: setup-env
        run: |
          # Determine the environment based on the branch
          if [[ -n "${{ github.event.inputs.environment }}" ]]; then
            echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF_NAME}" == "production" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF_NAME}" == "staging" ]]; then
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=develop" >> $GITHUB_ENV
          fi
      
          # Determine the environment based on the branch
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        
          # Determine the AWS Region
          echo "AWS_REGION=us-west-1" >> $GITHUB_ENV

      - name: Package and deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          FUNCTION: 'phyllo-profile-analytics'
        run: |
          echo "Deploying to environment: $ENVIRONMENT in region: $AWS_REGION"
          rm -f compressed/${ENVIRONMENT}-${FUNCTION}.zip
          cd lambdas/${FUNCTION} && zip -r9 ../../compressed/${ENVIRONMENT}-${FUNCTION}.zip . && cd ../..
          aws lambda update-function-code --region ${AWS_REGION} --function-name ${ENVIRONMENT}-${FUNCTION} --zip-file fileb://compressed/${ENVIRONMENT}-${FUNCTION}.zip
